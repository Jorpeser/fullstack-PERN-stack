Fullstack Project

Tecnologías:

- React
- TypeScript
- GraphQL
- Apollo
- NodeJS
- PostgreSQL
- MikroOrm
- Redis
- NextJS
- TypeGraphQL


ORM (Object Relational Mappers)

    Software que nos permite interactuar con nuestra base de datos sin necesidad de conocer el lenguaje de consultas. Todo esto utilizando un paradigma orientado a objetos (con una clase, metodos y atributos [ ej: User.select(User.id).where(User.id === 1) ]). Traduce sentencias en nuestro lenguaje de programación a sentencias SQL.

    PROS: 
    
        - La mayoría de ORMs son compatibles con distintos gestores de base de datos. Por lo que si hubiera que cambiar por ejemplo de MySQL a PostgreSQL, simplemente tendríamos que cambiar la configuración de nuestro ORM.

        - Dependiendo del ORM se nos permitirá ejecutar operaciones como migraciones, transacciones(2), triggers, etc. Que resultan complejas sin un amplio conocimiento de gestion de bases de datos.

    CONTRAS: 
    
        - Para consultas muy complejas puede que no funcione correctamente o de manera óptima por lo que tocaría hacer la consulta utilizando SQL.

        - El abuso de los ORM puede hacer que nos olvidemos de SQL y saber bien SQL es muy importante.

    (2) una transaccion es una interacción con la BD compuesta de varias operaciones que se deben ejecutar de una sola vez y que no permita otros cambios hasta que la transaccion haya finalizado.


Redis (REmote DIctionary Server)

    Redis es una base de datos de clave-valor que se puede utilizar para almacenar datos en forma de diccionarios.
    El servidor de Redis envia datos al cliente. 
    Es muy utilizada para almacenar datos en forma de cache.
    La principal ventaja es que almacena los datos en la memoria RAM, lo que le confiere una gran velocidad.













COMANDOS EJECUTADOS:

yarn add redis connect-redis express-session
yarn add -D @types/redis @types/express-session @types/connect-redis